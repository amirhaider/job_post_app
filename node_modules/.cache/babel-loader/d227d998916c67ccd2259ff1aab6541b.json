{"ast":null,"code":"var _jsxFileName = \"C:\\\\trimulabs projects\\\\job_post_app\\\\job_post_app\\\\src\\\\Components\\\\Jobs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { NavLink } from 'react-router-dom';\nimport \"../style/base/base.css\";\nimport \"../style/component/jobs.css\";\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n        slug\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\nexport default function Job(props) {\n  const View = item => {\n    console.log(item);\n  };\n\n  let [jobs, setJobs] = useState([]);\n  let [filter, setfilter] = useState([]);\n  const {\n    loading,\n    data\n  } = useQuery(JOBS);\n  useEffect(() => {\n    if (data) {\n      setJobs(data.jobs);\n      setfilter(data.jobs);\n    }\n  }, [data]);\n\n  const onChange = e => {\n    let f = jobs.filter(f => f.title.toLowerCase().includes(e.target.value.toLowerCase()) || f.company.name.toLowerCase().includes(e.target.value.toLowerCase()));\n    setfilter(f);\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, \"loading....\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_data_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Enter Job or Company for serch\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), filter.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"data_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom_checkbox\",\n      checked: item.isPublished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }\n    }), item.company && /*#__PURE__*/React.createElement(\"a\", {\n      href: `/jobs/${item.slug}/${item.company.slug}`,\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    }, \"at \"), \" \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"company_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, item.company.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"apply_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"apply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, \"Apply\"), item.company && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: console.log(),\n      className: \"view_details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Details\"))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, item.description), item.userEmail && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Posted By:\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: item.userEmail,\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \" \", item.userEmail)))));\n  }));\n}","map":{"version":3,"sources":["C:/trimulabs projects/job_post_app/job_post_app/src/Components/Jobs.js"],"names":["React","useState","useEffect","useQuery","gql","NavLink","JOBS","Job","props","View","item","console","log","jobs","setJobs","filter","setfilter","loading","data","onChange","e","f","title","toLowerCase","includes","target","value","company","name","map","isPublished","slug","description","userEmail"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { NavLink} from 'react-router-dom';\r\nimport \"../style/base/base.css\";\r\nimport \"../style/component/jobs.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst JOBS = gql`\r\n  {\r\n    jobs {\r\n      id\r\n      title\r\n      isPublished\r\n      description\r\n      slug\r\n      company {\r\n        name\r\n        slug\r\n      }\r\n      userEmail\r\n      applyUrl\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Job(props) {\r\n  const View=(item)=>{\r\n    console.log(item) ;\r\n};\r\n \r\n  \r\n  let [jobs, setJobs] = useState([]);\r\n  let [filter, setfilter] = useState([]);\r\n  const { loading, data } = useQuery(JOBS);\r\n  useEffect(() => {\r\n    if(data){\r\n    \r\n    setJobs(data.jobs);\r\n    setfilter(data.jobs);\r\n  }\r\n    \r\n    \r\n  }, [data])\r\n  const onChange = e => {\r\n    let f = jobs.filter(\r\n      f =>\r\n        f.title.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n        f.company.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    setfilter(f);\r\n  };\r\n  if (loading)\r\n    return (\r\n     <div className=\"loading\">\r\n     <h1>loading....</h1>\r\n      </div>\r\n    );\r\n  return (\r\n   <div className=\"main_data_div\"> \r\n    <input\r\n            \r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter Job or Company for serch\"\r\n            onChange={onChange}\r\n          />\r\n          \r\n     \r\n     {filter.map(function(item){\r\n       \r\n  return <div className=\"main_div\">\r\n  <div className=\"\">\r\n  <div className=\"data\">\r\n  <div className=\"data_header\">\r\n  <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom_checkbox\"\r\n                        checked={item.isPublished}\r\n                        \r\n                      />\r\n                     \r\n                      {item.company && (\r\n                        <a\r\n                          href={`/jobs/${item.slug}/${item.company.slug}`}\r\n                          className=\"title\"\r\n                        >\r\n                          {item.title}\r\n                        </a>\r\n                        \r\n                      )}\r\n                      <small>at </small>{\" \"}\r\n                      <b className=\"company_name\">{item.company.name}</b>\r\n                      <p className=\"apply_view\">\r\n                      <button\r\n                        \r\n                        className=\"apply\"\r\n                      >\r\n                        Apply\r\n                      </button>\r\n                      {item.company && (\r\n                        <button\r\n                          onClick={console.log()}\r\n       \r\n                          className=\"view_details\"\r\n                          \r\n                        >\r\n                          Details\r\n                        </button>\r\n                      )}\r\n                    </p>\r\n                    </div>\r\n                      <p className=\"description\">{item.description}</p>\r\n                      {item.userEmail && (\r\n                      <p className=\"\">\r\n                        <strong>Posted By:</strong>{\" \"}\r\n                        <a href={item.userEmail} className=\"email\"> {item.userEmail}</a>\r\n                      </p>\r\n                    )}\r\n           </div>\r\n        </div>\r\n    </div>\r\n})}\r\n   </div>\r\n  \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}