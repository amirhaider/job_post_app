{"ast":null,"code":"var _jsxFileName = \"C:\\\\trimulabs projects\\\\job_post_app\\\\job_post_app\\\\src\\\\Components\\\\jobdetails.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useParams } from \"react-router\";\nimport \"../style/base/base.css\";\nimport \"../style/component/jobdetails.css\";\nconst GET_JOB = gql`\n  query getJob($companySlug: String!, $jobSlug: String!) {\n    job(input: { companySlug: $companySlug, jobSlug: $jobSlug }) {\n      id\n      title\n      isPublished\n      description\n      company {\n        name\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\nexport default function JobDetails(props) {\n  const {\n    job_slug,\n    company_slug\n  } = useParams();\n  let [job, setJob] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(GET_JOB, {\n    variables: {\n      jobSlug: job_slug,\n      companySlug: company_slug\n    }\n  });\n\n  if (!Object.keys(job).length && data && data.job) {\n    setJob(data.job);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Job Details \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Loading...\")));\n  }\n\n  const {\n    id,\n    title,\n    isPublished,\n    description,\n    company,\n    applyUrl\n  } = job;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"job_details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Job Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: id,\n    checked: isPublished,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"www.bing.com\",\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"at \"), \" \", company && /*#__PURE__*/React.createElement(\"b\", {\n    className: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, company.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"apply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, applyUrl)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, description))))));\n}","map":{"version":3,"sources":["C:/trimulabs projects/job_post_app/job_post_app/src/Components/jobdetails.js"],"names":["React","useState","useQuery","gql","useParams","GET_JOB","JobDetails","props","job_slug","company_slug","job","setJob","loading","data","variables","jobSlug","companySlug","Object","keys","length","id","title","isPublished","description","company","applyUrl","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useParams } from \"react-router\";\r\nimport \"../style/base/base.css\";\r\nimport \"../style/component/jobdetails.css\";\r\n\r\n\r\nconst GET_JOB = gql`\r\n  query getJob($companySlug: String!, $jobSlug: String!) {\r\n    job(input: { companySlug: $companySlug, jobSlug: $jobSlug }) {\r\n      id\r\n      title\r\n      isPublished\r\n      description\r\n      company {\r\n        name\r\n      }\r\n      userEmail\r\n      applyUrl\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function JobDetails(props) {\r\n  const { job_slug, company_slug } = useParams();\r\n  let [job, setJob] = useState({});\r\n  const { loading, data } = useQuery(GET_JOB, {\r\n    variables: {\r\n      jobSlug: job_slug,\r\n      companySlug: company_slug\r\n    }\r\n  });\r\n  if (!Object.keys(job).length && data && data.job) {\r\n    setJob(data.job);\r\n  }\r\n  if (loading) {\r\n    return (\r\n      \r\n      <div className=\"\">\r\n  \r\n            <h4 className=\"\">Job Details </h4>\r\n            <div className=\"\">\r\n              <h3>Loading...</h3>\r\n            </div>\r\n            </div>\r\n          \r\n    );\r\n  }\r\n  const { id, title, isPublished, description, company, applyUrl } = job;\r\n  return (\r\n    <div class=\"\">\r\n      <div class=\"\">\r\n        <div className=\"data\">\r\n          <h2 className=\"job_details\">Job Details</h2>\r\n          <div class=\"\">\r\n            <div class=\"\">\r\n              <div class=\"\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={id}\r\n                  checked={isPublished}\r\n                />\r\n                \r\n                <a\r\n                href=\"www.bing.com\"\r\n                  \r\n                  className=\"title\"\r\n                >\r\n                  {title}\r\n                </a>\r\n                <small>at </small>{\" \"}\r\n                {company && (\r\n                  <b className=\"company\">{company.name}</b>\r\n                )}\r\n                <button\r\n                        \r\n                        className=\"apply\"\r\n                      >\r\n                      {applyUrl}\r\n                      </button>\r\n              </div>\r\n              <p className=\"description\">{description}</p>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}