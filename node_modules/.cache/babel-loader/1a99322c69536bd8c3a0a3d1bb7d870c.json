{"ast":null,"code":"var _jsxFileName = \"C:\\\\trimulabs projects\\\\job_post_app\\\\job_post_app\\\\src\\\\Components\\\\Jobs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport \"../style/base/base.css\";\nimport \"../style/component/jobs.css\"; // GQ Query to fetch all the JOBS\n\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n        slug\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\nexport default function Job(props) {\n  let [jobs, setJobs] = useState([]);\n  const {\n    loading,\n    data\n  } = useQuery(JOBS);\n  useEffect(() => {\n    if (data) {\n      setJobs(data.jobs);\n    }\n  }, [data]);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \"loading....\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form\",\n    placeholder: \"Enter Job or Company for serch\" //onChange={onChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), jobs.map(function (item, i) {\n    console.log(item, 'index i', i);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_data_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"custom-control-input\",\n      id: item.id,\n      checked: item.isPublished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: item.id,\n      title: \"Published\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }), item.company && /*#__PURE__*/React.createElement(\"a\", {\n      href: `/jobs/${item.slug}/${item.company.slug}`,\n      class: \"btn btn-sm text-info font-18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, \"at \"), \" \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"text-danger font-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, item.company.name), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"inbox-item-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: item.applyUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      class: \"btn btn-sm btn-primary font-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, \"Apply\"), item.company && /*#__PURE__*/React.createElement(\"a\", {\n      href: `/jobs/${item.slug}/${item.company.slug}`,\n      class: \"btn btn-sm btn-link text-info font-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"View Details\")), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, item.description), item.userEmail && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Posted By:\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: item.userEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \" \", item.userEmail)))));\n  }));\n}","map":{"version":3,"sources":["C:/trimulabs projects/job_post_app/job_post_app/src/Components/Jobs.js"],"names":["React","useState","useEffect","useQuery","gql","JOBS","Job","props","jobs","setJobs","loading","data","map","item","i","console","log","id","isPublished","company","slug","title","name","applyUrl","description","userEmail"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport \"../style/base/base.css\";\nimport \"../style/component/jobs.css\";\n\n\n\n\n// GQ Query to fetch all the JOBS\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n        slug\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\n\nexport default function Job(props) {\n  \n  let [jobs, setJobs] = useState([]);\n  const { loading, data } = useQuery(JOBS);\n  useEffect(() => {\n    if(data){\n    \n    setJobs(data.jobs);\n  }\n    \n    \n  }, [data])\n  \n  if (loading)\n    return (\n     <div className=\"loading\">\n     <h1>loading....</h1>\n      </div>\n    );\n  \n \n\n  return (\n   <div>\n    <input\n            \n            type=\"text\"\n            className=\"form\"\n            placeholder=\"Enter Job or Company for serch\"\n            //onChange={onChange}\n          />\n          \n     \n     {jobs.map(function(item, i){\n       console.log(item,'index i',i);\n  return <div className=\"main_div\">\n  <div className=\"main_data_div\">\n  <div className=\"data\">\n  <input\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        id={item.id}\n                        checked={item.isPublished}\n                      />\n                      <label\n                        class=\"custom-control-label\"\n                        for={item.id}\n                        title=\"Published\"\n                      ></label>\n                      {item.company && (\n                        <a\n                          href={`/jobs/${item.slug}/${item.company.slug}`}\n                          class=\"btn btn-sm text-info font-18\"\n                        >\n                          {item.title}\n                        </a>\n                        \n                      )}\n                      <small>at </small>{\" \"}\n                      <b className=\"text-danger font-16\">{item.company.name}</b>\n                      <p class=\"inbox-item-date\">\n                      <a\n                        href={item.applyUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        class=\"btn btn-sm btn-primary font-13\"\n                      >\n                        Apply\n                      </a>\n                      {item.company && (\n                        <a\n                          href={`/jobs/${item.slug}/${item.company.slug}`}\n                          class=\"btn btn-sm btn-link text-info font-13\"\n                        >\n                          View Details\n                        </a>\n                      )}\n                    </p>\n                      <p class=\"description\">{item.description}</p>\n                      {item.userEmail && (\n                      <p className=\"mt-2\">\n                        <strong>Posted By:</strong>{\" \"}\n                        <a href={item.userEmail}> {item.userEmail}</a>\n                      </p>\n                    )}\n                      \n                     \n\n  \n  \n  \n  \n  </div>\n  </div>\n  </div>\n})}\n   </div>\n  \n  );\n}\n"]},"metadata":{},"sourceType":"module"}