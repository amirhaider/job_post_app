{"ast":null,"code":"var _jsxFileName = \"C:\\\\apollo-react-graphql-master\\\\apollo-react-graphql-master\\\\src\\\\Components\\\\Job.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\"; // GQ Query to fetch all the JOBS\n\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n        slug\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\nexport default function Job(props) {\n  let [jobs, setJobs] = useState([]);\n  let [filtered, setFiltered] = useState([]);\n  const {\n    loading,\n    data\n  } = useQuery(JOBS);\n\n  const onChange = e => {\n    let j = jobs.filter(j => j.title.toLowerCase().includes(e.target.value.toLowerCase()) || j.company.name.toLowerCase().includes(e.target.value.toLowerCase()));\n    setFiltered(j);\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, \"loading....\")); // set state when API returns record the first time. will be called only once\n\n  if (!jobs.length && data && data.jobs.length) {\n    setJobs(data.jobs);\n    setFiltered(data.jobs);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"plz enter data\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/apollo-react-graphql-master/apollo-react-graphql-master/src/Components/Job.js"],"names":["React","useState","useQuery","gql","JOBS","Job","props","jobs","setJobs","filtered","setFiltered","loading","data","onChange","e","j","filter","title","toLowerCase","includes","target","value","company","name","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAEA;;AACA,MAAMC,IAAI,GAAGD,GAAI;;;;;;;;;;;;;;;;CAAjB;AAkBA,eAAe,SAASE,GAAT,CAAaC,KAAb,EAAoB;AAEjC,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,QAAQ,CAACE,IAAD,CAAlC;;AACA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIC,CAAC,GAAGR,IAAI,CAACS,MAAL,CAAYD,CAAC,IACjBA,CAAC,CAACE,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BL,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeH,WAAf,EAA/B,KACAH,CAAC,CAACO,OAAF,CAAUC,IAAV,CAAeL,WAAf,GAA6BC,QAA7B,CAAsCL,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeH,WAAf,EAAtC,CAFI,CAAR;AAIAR,IAAAA,WAAW,CAACK,CAAD,CAAX;AACD,GAND;;AAOA,MAAIJ,OAAJ,EACE,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADD,CAb+B,CAkBjC;;AACA,MAAI,CAACJ,IAAI,CAACiB,MAAN,IAAgBZ,IAAhB,IAAwBA,IAAI,CAACL,IAAL,CAAUiB,MAAtC,EAA8C;AAC5ChB,IAAAA,OAAO,CAACI,IAAI,CAACL,IAAN,CAAP;AACAG,IAAAA,WAAW,CAACE,IAAI,CAACL,IAAN,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAeD","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\n// GQ Query to fetch all the JOBS\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n        slug\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\n\nexport default function Job(props) {\n  \n  let [jobs, setJobs] = useState([]);\n  let [filtered, setFiltered] = useState([]);\n  const { loading, data } = useQuery(JOBS);\n  const onChange = e => {\n    let j = jobs.filter(j =>\n        j.title.toLowerCase().includes(e.target.value.toLowerCase()) ||\n        j.company.name.toLowerCase().includes(e.target.value.toLowerCase())\n    );\n    setFiltered(j);\n  };\n  if (loading)\n    return (\n     <div>\n     <h1>loading....</h1>\n      </div>\n    );\n  // set state when API returns record the first time. will be called only once\n  if (!jobs.length && data && data.jobs.length) {\n    setJobs(data.jobs);\n    setFiltered(data.jobs);\n  }\n\n  return (\n    <div class=\"form-group\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"plz enter data\"\n            onChange={onChange}\n          />\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}