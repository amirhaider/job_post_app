{"ast":null,"code":"var _jsxFileName = \"C:\\\\trimulabs projects\\\\job_post_app\\\\job_post_app\\\\src\\\\Components\\\\Jobs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport \"../style/base/base.css\";\nimport \"../style/component/jobs.css\"; // GQ Query to fetch all the JOBS\n\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\nexport default function Job(props) {\n  let [jobs, setJobs] = useState([]);\n  const {\n    loading,\n    data\n  } = useQuery(JOBS);\n  useEffect(() => {\n    if (data) {\n      setJobs(data.jobs);\n    }\n  }, [data]);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"loading....\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form\",\n    placeholder: \"Enter Job or Company for serch\" //onChange={onChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), jobs.map(function (item, i) {\n    console.log(item, 'index i', i);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }\n    }, item && item.id), /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }\n    }, item && item.item), /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }\n    }, item && item.isPublished), /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }\n    }, item && item.description), /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }\n    }, item && item.company.name)));\n  }));\n}","map":{"version":3,"sources":["C:/trimulabs projects/job_post_app/job_post_app/src/Components/Jobs.js"],"names":["React","useState","useEffect","useQuery","gql","JOBS","Job","props","jobs","setJobs","loading","data","map","item","i","console","log","id","isPublished","description","company","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,wBAAP;AACA,OAAO,6BAAP,C,CAIA;;AACA,MAAMC,IAAI,GAAGD,GAAI;;;;;;;;;;;;;;;CAAjB;AAiBA,eAAe,SAASE,GAAT,CAAaC,KAAb,EAAoB;AAEjC,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBR,QAAQ,CAACE,IAAD,CAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,IAAH,EAAQ;AAERF,MAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACD;AAGA,GAPQ,EAON,CAACG,IAAD,CAPM,CAAT;AAQA,MAAID,OAAJ,EACE,oBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADD;AAQF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAEQ,IAAA,IAAI,EAAC,MAFb;AAGQ,IAAA,SAAS,EAAC,MAHlB;AAIQ,IAAA,WAAW,EAAC,gCAJpB,CAKQ;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUGF,IAAI,CAACI,GAAL,CAAS,UAASC,IAAT,EAAeC,CAAf,EAAiB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAiB,SAAjB,EAA2BC,CAA3B;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,GAAG,EAAED,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,IAAI,IAAIA,IAAI,CAACI,EAAhC,CADA,eAEA;AAAI,MAAA,GAAG,EAAEJ,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,IAAI,IAAIA,IAAI,CAACA,IAAhC,CAFA,eAGA;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,IAAI,IAAIA,IAAI,CAACK,WAAhC,CAHA,eAIA;AAAI,MAAA,GAAG,EAAEL,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,IAAI,IAAIA,IAAI,CAACM,WAAhC,CAJA,eAKA;AAAI,MAAA,GAAG,EAAEN,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,IAAI,IAAIA,IAAI,CAACO,OAAL,CAAaC,IAAxC,CALA,CADO,CAAP;AASD,GAXK,CAVH,CADD;AAyBD","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport \"../style/base/base.css\";\nimport \"../style/component/jobs.css\";\n\n\n\n// GQ Query to fetch all the JOBS\nconst JOBS = gql`\n  {\n    jobs {\n      id\n      title\n      isPublished\n      description\n      slug\n      company {\n        name\n      }\n      userEmail\n      applyUrl\n    }\n  }\n`;\n\nexport default function Job(props) {\n  \n  let [jobs, setJobs] = useState([]);\n  const { loading, data } = useQuery(JOBS);\n  useEffect(() => {\n    if(data){\n    \n    setJobs(data.jobs);\n  }\n    \n    \n  }, [data])\n  if (loading)\n    return (\n     <div className=\"loading\">\n     <h1>loading....</h1>\n      </div>\n    );\n  \n \n\n  return (\n   <div>\n    <input\n            \n            type=\"text\"\n            className=\"form\"\n            placeholder=\"Enter Job or Company for serch\"\n            //onChange={onChange}\n          />\n          \n     \n     {jobs.map(function(item, i){\n       console.log(item,'index i',i);\n  return <div className=\"main_div\">\n  <div className=\"data\">\n  <h1 key={item.id}>{item && item.id}</h1>\n  <li key={item.id}>{item && item.item}</li>\n  <li key={item.id}>{item && item.isPublished}</li>\n  <li key={item.id}>{item && item.description}</li>\n  <li key={item.id}>{item && item.company.name}</li>\n  </div>\n  </div>\n})}\n   </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}